{"ast":null,"code":"var _jsxFileName = \"/Users/Fonzie/Development/code/Mod_4/Project/nasa-image-search-frontend/src/Search.js\";\nimport React from 'react';\nimport ImageCardList from './ImageCardList';\nimport ImageModal from './Imag';\nexport default class Search extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchImageData = async id => {\n      await fetch(`https://nasa-file-search-backend.herokuapp.com/search/${id}`).then(resp => resp.json()).then(json => {\n        this.setState({\n          image: json.file\n        });\n      });\n      return this.state.image;\n    };\n\n    this.toggleImageModal = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.state = {\n      images: [],\n      image: [],\n      isOpen: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://nasa-file-search-backend.herokuapp.com/search?query=earth&page=1&perPage=15\").then(resp => resp.json()).then(json => {\n      this.setState({\n        images: json.file\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"uk-container uk-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"uk-container uk-flex uk-flex-between uk-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"uk-inline uk-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"uk-form-width-medium uk-search uk-search-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"uk-search-input\",\n      type: \"search\",\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"uk-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"uk-button uk-button-default\",\n      type: \"button\",\n      \"data-uk-toggle\": \"target: #offcanvas-push\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Filter\"), React.createElement(\"div\", {\n      id: \"offcanvas-push\",\n      \"data-uk-offcanvas\": \"mode: push; overlay: true; flip: true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"uk-offcanvas-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"uk-offcanvas-close\",\n      type: \"button\",\n      \"data-uk-close\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"This will be the options\"))))), React.createElement(ImageCardList, {\n      images: this.state.images,\n      fetchImageData: this.fetchImageData,\n      toggleImageModal: this.toggleImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Fonzie/Development/code/Mod_4/Project/nasa-image-search-frontend/src/Search.js"],"names":["React","ImageCardList","ImageModal","Search","Component","constructor","fetchImageData","id","fetch","then","resp","json","setState","image","file","state","toggleImageModal","isOpen","images","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,QAAvB;AAEA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAElDC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAoBdC,cApBc,GAoBG,MAAOC,EAAP,IAAc;AAC7B,YAAMC,KAAK,CAAE,yDAAwDD,EAAG,EAA7D,CAAL,CACHE,IADG,CACEC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADV,EAEHF,IAFG,CAEEE,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AACZC,UAAAA,KAAK,EAAEF,IAAI,CAACG;AADA,SAAd;AAGD,OANG,CAAN;AAOA,aAAO,KAAKC,KAAL,CAAWF,KAAlB;AACD,KA7Ba;;AAAA,SA+BdG,gBA/Bc,GA+BK,MAAM;AACvB,WAAKJ,QAAL,CAAc;AACZK,QAAAA,MAAM,EAAE,CAAC,KAAKF,KAAL,CAAWE;AADR,OAAd;AAGD,KAnCa;;AAEZ,SAAKF,KAAL,GAAa;AACXG,MAAAA,MAAM,EAAE,EADG;AAEXL,MAAAA,KAAK,EAAE,EAFI;AAGXI,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBX,IAAAA,KAAK,CAAC,qFAAD,CAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZM,QAAAA,MAAM,EAAEP,IAAI,CAACG;AADD,OAAd;AAGD,KANH;AAOD;;AAqBCM,EAAAA,MAAM,GAAG;AACL,WACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,kDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,WAAW,EAAC,WAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAWE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAgD,MAAA,IAAI,EAAC,QAArD;AAA8D,wBAAe,yBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAyB,2BAAkB,uCAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAuC,MAAA,IAAI,EAAC,QAA5C;AAAqD,2BAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,CADF,CAJF,CAXF,CADF,EAwBE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWG,MAAlC;AAA0C,MAAA,cAAc,EAAE,KAAKZ,cAA/D;AAA+E,MAAA,gBAAgB,EAAE,KAAKU,gBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,CADF;AA6BH;;AAtE+C","sourcesContent":["import React from 'react'   \nimport ImageCardList from './ImageCardList'\nimport ImageModal from './Imag'\n\nexport default class Search extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      images: [],\n      image: [],\n      isOpen: false\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://nasa-file-search-backend.herokuapp.com/search?query=earth&page=1&perPage=15\")\n      .then(resp => resp.json())\n      .then(json => {\n        this.setState({\n          images: json.file\n        });\n      });\n  }\n\n\n  fetchImageData = async (id) => {\n    await fetch(`https://nasa-file-search-backend.herokuapp.com/search/${id}`)\n      .then(resp => resp.json())\n      .then(json => {\n        this.setState({\n          image: json.file\n        });\n      });\n    return this.state.image\n  }\n\n  toggleImageModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n\n\n    render() {\n        return (\n          <div className=\"uk-container uk-margin\">\n            <div className=\"uk-container uk-flex uk-flex-between uk-margin\">\n              <div className=\"uk-inline uk-margin\">\n                <form className=\"uk-form-width-medium uk-search uk-search-default\">\n                  <input\n                    className=\"uk-search-input\"\n                    type=\"search\"\n                    placeholder=\"Search...\"\n                  ></input>\n                </form>\n              </div>\n\n              <div className=\"uk-inline\">\n                <button className=\"uk-button uk-button-default\" type=\"button\" data-uk-toggle=\"target: #offcanvas-push\">\n                  Filter\n                </button>\n                <div id=\"offcanvas-push\" data-uk-offcanvas=\"mode: push; overlay: true; flip: true\">\n                  <div className=\"uk-offcanvas-bar\">\n                    <button className=\"uk-offcanvas-close\" type=\"button\" data-uk-close></button>\n                    <h1>This will be the options</h1>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ImageCardList images={this.state.images} fetchImageData={this.fetchImageData} toggleImageModal={this.toggleImageModal} />\n            \n          </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}